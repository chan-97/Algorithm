// 첫번째 문제
// 길이가 n이고, 수박수박수박수....와 같은 패턴을 유지하는 문자열을 리턴하는 함수, solution을 완성하세요. 예를들어 n이 4이면 수박수박을 리턴하고 3이라면 수박수를 리턴하면 됩니다.

// 제한 조건
// n은 길이 10,000이하인 자연수입니다.
// 입출력 예
// n	return
// 3	수박수
// 4	수박수박

function solution(n) {
    let answer = '';
    let result = [];
    for(let i = 0; i < n; i++) {
      result[i] = i % 2 === 0 ? '수' : '박'
    }
    answer = result.join('')
    return answer;
}

solution(4)

// 두번째 문제
// 양의 정수 x가 하샤드 수이려면 x의 자릿수의 합으로 x가 나누어져야 합니다. 예를 들어 18의 자릿수 합은 1+8=9이고, 18은 9로 나누어 떨어지므로 18은 하샤드 수입니다. 자연수 x를 입력받아 x가 하샤드 수인지 아닌지 검사하는 함수, solution을 완성해주세요.

// 제한 조건
// x는 1 이상, 10000 이하인 정수입니다.
// 입출력 예
// arr	return
// 10	true
// 12	true
// 11	false
// 13	false
// 입출력 예 설명
// 입출력 예 #1
// 10의 모든 자릿수의 합은 1입니다. 10은 1로 나누어 떨어지므로 10은 하샤드 수입니다.

// 입출력 예 #2
// 12의 모든 자릿수의 합은 3입니다. 12는 3으로 나누어 떨어지므로 12는 하샤드 수입니다.

// 입출력 예 #3
// 11의 모든 자릿수의 합은 2입니다. 11은 2로 나누어 떨어지지 않으므로 11는 하샤드 수가 아닙니다.

// 입출력 예 #4
// 13의 모든 자릿수의 합은 4입니다. 13은 4로 나누어 떨어지지 않으므로 13은 하샤드 수가 아닙니다.

function solution(x) {
    let answer = true;
    const str = `${x}`.split('');
    let sum = 0;
    
    for (let i = 0; i < str.length; i++) {
      sum += Number(str[i]);
    }
    
    if (x % sum === 0) return answer;
    else return !answer;
}

solution(12)

// 템플릿 리터럴을 사용하여 숫자의 각 자릿수를 분할하고, 반복문을 돌며 분할한 숫자를 합하여 하샤드 수인지 판별한다.